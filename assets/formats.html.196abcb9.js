import{_ as t,o as e,c as o,e as d}from"./app.cd1366a5.js";const a={},i=d(`<h1 id="formatos-de-dominio-suri" tabindex="-1"><a class="header-anchor" href="#formatos-de-dominio-suri" aria-hidden="true">#</a> Formatos de dominio Suri</h1><p>Los Suris se definen mediante una serie de nombres separados por puntos <code>.</code>. Esos nombres se llaman <em>nombres de nivel</em> porque cada uno de ellos pertenecen a un nivel espec\xEDfico, siendo el m\xE1s a la izquierda el nivel m\xE1s alto.</p><div class="language-text ext-text"><pre class="language-text"><code>   Espec\xEDfico
+ \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u25BA -
suri.domains.docs
\u2500\u252C\u2500\u2500 \u2500\u252C\u2500\u2500\u2500\u2500\u2500 \u2500\u252C\u2500\u2500
 \u2502    \u2502       \u2514\u25BA 3er nivel
 \u2502    \u2514\u25BA 2do nivel
 \u2514\u25BA 1er nivel
</code></pre></div><div class="custom-container note"><p class="custom-container-title">M\xE1s info</p><p>Esto funciona en el orden inverso a los actuales dominios de DNS, donde el nivel m\xE1s profundo se escribe primero. Por ejemplo, el dominio DNS dominio <code>docs.suri.domains</code> se escribir\xEDa como <code>domains.suri.docs</code> en <strong>Suri</strong>.</p></div><p>El nivel de un suri completo es igual al <em>nombre de nivel</em> m\xE1s espec\xEDfico, o al recuento de nombres. En el ejemplo anterior ejemplo, el suri <code>suri.domains.docs</code> tiene un nivel de 3.</p><p>Cuando un Suri tiene un nivel de 1, se llama suri <strong>TLD</strong> o suri de primer nivel.</p><h2 id="formato-canonico" tabindex="-1"><a class="header-anchor" href="#formato-canonico" aria-hidden="true">#</a> Formato can\xF3nico</h2><p>En el formato can\xF3nico, los nombres de nivel se escriben empezando por el nivel m\xE1s alto a la izquierda, hasta el m\xE1s bajo a la derecha siendo cada nivel seguido de un punto <code>.</code> excepto el \xFAltimo.</p><ul><li><code>.</code> - ra\xEDz</li><li><code>com</code></li><li><code>dominios</code></li><li><code>suri.domains</code></li><li><code>suri.domains.docs</code></li></ul><details class="custom-container details"><summary>Definici\xF3n formal</summary><div class="language-text ext-text"><pre class="language-text"><code>&lt;canonical_suri&gt; := &lt;root&gt; | &lt;suri&gt;
          &lt;root&gt; := &#39;.&#39;
          &lt;suri&gt; := &lt;name&gt; (&#39;.&#39; &lt;name&gt;)*
          &lt;name&gt; := &lt;name_char&gt;+ (&quot;-&quot;+ &lt;name_char&gt;+)*
     &lt;name_char&gt; := &lt;unicode_xid_body&gt; | &lt;unicode_number&gt; | &lt;emoji_pictographic&gt; | &lt;emoji_component&gt;
</code></pre></div></details><h2 id="formato-etiquetado" tabindex="-1"><a class="header-anchor" href="#formato-etiquetado" aria-hidden="true">#</a> Formato etiquetado</h2><p>Por \xFAltimo, los formatos etiquetados consisten en un suri prefijado por un s\xEDmbolo, llamado etiqueta (tag en ingl\xE9s), que les da un significado extra. El formato etiquetado tiene una versi\xF3n equivalente en el formato can\xF3nico, por lo que se puede utilizar cualquiera de los dos para hacer referencia al suri. Las etiquetas disponibles son:</p><table><thead><tr><th>Nombre</th><th style="text-align:center;">S\xEDmbolo</th><th>Forma etiquetada</th><th>Forma can\xF3nica</th></tr></thead><tbody><tr><td>Menci\xF3n<br>(Mention)</td><td style="text-align:center;">@</td><td><code>@&lt;suri&gt;</code></td><td><code>tag.mention.&lt;suri&gt;</code></td></tr><tr><td>Tema<br>(Hash / Hashtag)</td><td style="text-align:center;">#</td><td><code>#&lt;suri&gt;</code></td><td><code>tag.hash.&lt;suri&gt;</code></td></tr><tr><td>Dinero<br>(Cash / Cashtag)</td><td style="text-align:center;">$</td><td><code>$&lt;suri&gt;</code></td><td><code>tag.cash.&lt;suri&gt;</code></td></tr><tr><td>Ancla<br>(Anchor)</td><td style="text-align:center;">&amp;</td><td><code>&amp;&lt;suri&gt;</code></td><td><code>tag.anchor.&lt;suri&gt;</code></td></tr><tr><td>Alerta<br>(Alert)</td><td style="text-align:center;">!</td><td><code>!&lt;suri&gt;</code></td><td><code>tag.alert.&lt;suri&gt;</code></td></tr><tr><td>Pregunta<br>(Question)</td><td style="text-align:center;">?</td><td><code>?&lt;suri&gt;</code></td><td><code>tag.question.&lt;suri&gt;</code></td></tr><tr><td></td><td style="text-align:center;"></td><td></td><td></td></tr><tr><td>Bitcoin</td><td style="text-align:center;">\u20BF</td><td><code>\u20BF&lt;suri&gt;</code></td><td><code>tag.btc.&lt;suri&gt;</code></td></tr><tr><td>Ethereum</td><td style="text-align:center;">\u29EB</td><td><code>\u29EB&lt;suri&gt;</code></td><td><code>tag.eth.&lt;suri&gt;</code></td></tr><tr><td>Solana</td><td style="text-align:center;">\u25CE</td><td><code>\u25CE&lt;suri&gt;</code></td><td><code>tag.sol.&lt;suri&gt;</code></td></tr></tbody></table><p>Por ejemplo:</p><ul><li><code>@miUsuario.twitter</code> is equivalent to <code>tag.mention.miUsuario.twitter</code>.</li></ul><details class="custom-container details"><summary>Definici\xF3n formal</summary><div class="language-text ext-text"><pre class="language-text"><code>&lt;tagged_suri&gt; := &lt;tag&gt; &lt;suri&gt;
        &lt;tag&gt; := one of [@#$&amp;!?\u20BF\u29EB\u25CE]
       &lt;suri&gt; := &lt;name&gt; (&#39;.&#39; &lt;name&gt;)*
       &lt;name&gt; := &lt;name_char&gt;+ (&quot;-&quot;+ &lt;name_char&gt;+)*
  &lt;name_char&gt; := &lt;unicode_xid_body&gt; | &lt;unicode_number&gt; | &lt;emoji_pictographic&gt; | &lt;emoji_component&gt;
</code></pre></div></details>`,16),n=[i];function r(l,s){return e(),o("div",null,n)}const u=t(a,[["render",r],["__file","formats.html.vue"]]);export{u as default};
