import{_ as o,o as e,c as t,a as s}from"./app.a012c674.js";const f=JSON.parse('{"title":"Record Protocols","description":"","frontmatter":{},"headers":[],"relativePath":"en/protocol/records/protocols/index.md"}'),n={name:"en/protocol/records/protocols/index.md"},r=s(`<h1 id="record-protocols" tabindex="-1">Record Protocols <a class="header-anchor" href="#record-protocols" aria-hidden="true">#</a></h1><p>Records are defined by the protocol placed in them and the arguments of those protocols. A record can contain one or more protocols making a protocol stack in which the first protocol is the top one and the rest are placed below.</p><p>A website definition requires an IP address, a TCP port, whether to use TLS protocol or not, and the HTTP protocol, thus it would be defined as: <code>http&gt;tls&gt;tcp(443)&gt;ipv4(0.0.0.0)</code>. This corresponds to the stack:</p><div class="language-"><button class="copy"></button><span class="lang"></span><pre><code><span class="line"><span style="color:#A6ACCD;">3. [Application level] http</span></span>
<span class="line"><span style="color:#A6ACCD;">2.   [Transport level] tls</span></span>
<span class="line"><span style="color:#A6ACCD;">2.   [Transport level] tcp(443)</span></span>
<span class="line"><span style="color:#A6ACCD;">1.     [Network level] ipv4(0.0.0.0)</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>In the following section you can find the list of protocols with native support in <strong>Suri</strong> but anyone can use any custom protocol and combine them with other protocols in order to build a custom stack.</p><p>For example, social networks can use the following protocol stacks to access users&#39; public information:</p><ul><li><code>profile+name&gt;text(USERNAME)</code> for name.</li><li><code>profile+desc&gt;text(DESCRIPTION)</code> for description.</li><li><code>profile+pic&gt;http&gt;tls&gt;tcp(443)&gt;dns(WEB_DOMAIN_OF_MY_PICTURE)</code> for profile picture.</li></ul><p>This kind of composition opens together with the <a href="/en/protocol/searching/">search algorithm</a> opens a wide range of possibilities to increment the use cases of suris.</p>`,8),a=[r];function c(p,l,i,d,h,_){return e(),t("div",null,a)}const g=o(n,[["render",c]]);export{f as __pageData,g as default};
